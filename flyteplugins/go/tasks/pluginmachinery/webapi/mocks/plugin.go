// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	webapi "github.com/flyteorg/flyte/flyteplugins/go/tasks/pluginmachinery/webapi"
	mock "github.com/stretchr/testify/mock"
)

// Plugin is an autogenerated mock type for the Plugin type
type Plugin struct {
	mock.Mock
}

type Plugin_GetConfig struct {
	*mock.Call
}

func (_m Plugin_GetConfig) Return(_a0 webapi.PluginConfig) *Plugin_GetConfig {
	return &Plugin_GetConfig{Call: _m.Call.Return(_a0)}
}

func (_m *Plugin) OnGetConfig() *Plugin_GetConfig {
	c_call := _m.On("GetConfig")
	return &Plugin_GetConfig{Call: c_call}
}

func (_m *Plugin) OnGetConfigMatch(matchers ...interface{}) *Plugin_GetConfig {
	c_call := _m.On("GetConfig", matchers...)
	return &Plugin_GetConfig{Call: c_call}
}

// GetConfig provides a mock function with given fields:
func (_m *Plugin) GetConfig() webapi.PluginConfig {
	ret := _m.Called()

	var r0 webapi.PluginConfig
	if rf, ok := ret.Get(0).(func() webapi.PluginConfig); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(webapi.PluginConfig)
	}

	return r0
}
